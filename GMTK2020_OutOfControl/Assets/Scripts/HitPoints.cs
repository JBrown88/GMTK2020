//=============================================================================================================================//
//
//	Project: GMTK2020_OutOfControl
//	Copyright: Indie Pirates
//  Created on: 7/12/2020 2:38:11 PM
//
//=============================================================================================================================//


#region Usings

using System;
using UnityEngine;
using UnityEngine.UI;

#endregion

namespace GMTK2020_OutOfControl
{
	public class HitPoints : MonoBehaviour
	{
		//=====================================================================================================================//
		//=================================================== Pending Tasks ===================================================//
		//=====================================================================================================================//

		#region Pending Tasks

		#endregion

		//=====================================================================================================================//
		//================================================== Internal Classes =================================================//
		//=====================================================================================================================//

		#region Internal Classes

		#endregion

		//=====================================================================================================================//
		//================================================= Inspector Variables ===============================================//
		//=====================================================================================================================//

		#region Inspector Variables

		[SerializeField] private float _maxHP = 100;
		[SerializeField] private float _hpAnimTime = 0.1f;
		[SerializeField] private Image _hpBar;

		#endregion

		//=====================================================================================================================//
		//=================================================== Private Fields ==================================================//
		//=====================================================================================================================//

		#region Private Fields

		private float _curHp;
		private float _hpAnimDamp;
		
		#endregion

		//=====================================================================================================================//
		//================================================= Public Properties ==================================================//
		//=====================================================================================================================//

		#region Public Properties

		#endregion

		//=====================================================================================================================//
		//============================================= Unity Callback Methods ================================================//
		//=====================================================================================================================//

		#region Unity Callback Methods

		private void Start()
		{
			_curHp = _maxHP;
			 
		}

		private void Update()
		{
			/*var curFill = _hpBar.fillAmount;
			var targetFill = Mathf.Clamp01(_curHp / _maxHP);
			_hpBar.fillAmount = Mathf.SmoothDamp(curFill, targetFill, ref _hpAnimDamp, _hpAnimTime);
			if (Mathf.Approximately(curFill, targetFill))
			{
				enabled = false;
			}*/
		}

		#endregion

		//=====================================================================================================================//
		//================================================== Private Methods ==================================================//
		//=====================================================================================================================//

		#region Private Methods

		#endregion

		//=====================================================================================================================//
		//=================================================== Public Methods ==================================================//
		//=====================================================================================================================//

		#region Public Methods

		public void AddValue(float value)
		{
			_curHp = Mathf.Clamp(_curHp + value, 0, _maxHP);
			enabled = true;
		}

		public bool IsAlive()
		{
			return _curHp > 0;
		}

		#endregion

		//=====================================================================================================================//
		//===================================================== Coroutines ====================================================//
		//=====================================================================================================================//

		#region Coroutines

		#endregion

		//=====================================================================================================================//
		//================================================ Debugging & Testing ================================================//
		//=====================================================================================================================//

		#region Debugging & Testing

		#endregion
	}
}